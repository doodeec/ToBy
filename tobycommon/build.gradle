apply plugin: 'com.android.library'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 21
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

/**
 * moves the JDK dependency after jUnit to make JUnit usable
 * JDK uses its own JUnit, which can be old, so ours JUnit have to
 * be loaded before JDK's
 */
task enableJUnit {
    def file = file('tobycommon.iml')

    println "enabling JUnit"

    doLast {
        def parsedXml = (new XmlParser()).parse(file)
        def node = parsedXml.component[1]
        def jdk = node.find { it.@type == "jdk" }

        // remove first, it can be wrongly configured
        if (jdk != null) {
            // remove original node
            jdk.parent().remove(jdk)

            // add node to the end
            new Node(node, 'orderEntry', ['type': "jdk", 'jdkType': jdk.@jdkType, 'jdkName': jdk.@jdkName])
            def writer = new StringWriter()
            new XmlNodePrinter(new PrintWriter(writer)).print(parsedXml)
            file.text = writer.toString()
        }
    }
}

task copyResources(type: Copy) {
    from "${buildDir}/intermediates/classes/test/debug"
    into "${buildDir}/intermediates/classes/debug"
}

// test with JUnit task (define 'clean assembleDebugTest copyResources enableJUnit' as before task)

dependencies {
    androidTestCompile 'junit:junit:4.12'
}
